name: Build, Test and Deploy

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch: {}

jobs:
  build_test_and_validate:
    name: Run tests and validation
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2
      - name: Assume AWS role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.GH_ACTIONS_VALIDATE_ROLE_ARN }}
      - name: Install Yarn v3
        run: corepack enable
      - name: Check Yarn cache
        run: yarn install --immutable --immutable-cache --check-cache
      - name: Run linting
        if: always()
        run: yarn lint
      - name: Run tests
        if: always()
        run: yarn test
      - name: Build Lambda functions
        if: always()
        run: yarn build
      - name: Validate SAM template
        if: always()
        run: sam validate --config-env build
      - uses: actions/upload-artifact@v3
        with:
          name: sam-build
          path: |
            dist/
            template.yaml
  deploy:
    name: Deploy
    # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [build_test_and_validate]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: sam-build
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2
      - name: Assume AWS role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-2
          role-to-assume: ${{ secrets.GH_ACTIONS_ROLE_ARN }}
      - run: ls -a
      # - name: Deploy SAM app
      #   uses: alphagov/di-devplatform-upload-action@v2
      #   with:
      #     artifact-bucket-name: ${{ secrets.ARTIFACT_BUCKET_NAME }}
      #     signing-profile-name: ${{ secrets.SIGNING_PROFILE_NAME }}
      #     working-directory: '.'
