AWSTemplateFormatVersion: '2010-09-09'
Description: Shared infrastructure the TICF integration, includes SQS queues, Athena resourced and S3 buckets
Transform: AWS::Serverless-2016-10-31

Parameters:
  Environment:
    Description: The environment type
    Type: String
    AllowedValues:
      - dev
      - build
      - staging
      - integration
      - production

Resources:
  InitiateDataRequestQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: '{{resolve:ssm:SqsKmsKeyArn}}'
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt InitiateDataRequestDeadLetterQueue.Arn
        maxReceiveCount: 5

  InitiateDataRequestDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: '{{resolve:ssm:SqsKmsKeyArn}}'

  TerminatedJobQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: '{{resolve:ssm:SqsKmsKeyArn}}'

  #NOTE - This is a placeholder SQS queue which will be replaced - it is here to enable the Athena lambda to be created 
  InitiateAthenaQueryQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: '{{resolve:ssm:SqsKmsKeyArn}}'
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt InitiateAthenaQueryDeadLetterQueue.Arn
        maxReceiveCount: 5

  InitiateAthenaQueryDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: '{{resolve:ssm:SqsKmsKeyArn}}'

  BatchJobManifestBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${AWS::StackName}-${Environment}-batch-job-manifest-bucket
      LifecycleConfiguration:
        Rules:
          - Id: BatchJobManifestCleanupRule
            Status: Enabled
            ExpirationInDays: 5
      LoggingConfiguration:
        DestinationBucketName: !Ref BatchJobBucketLogsBucket
        LogFilePrefix: String
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  BatchJobBucketLogsBucket:
    #checkov:skip=CKV_AWS_18:This is the logs bucket
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-${Environment}-batch-job-bucket-logs
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  QueryResultsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${AWS::StackName}-${Environment}-query-results-bucket
      LifecycleConfiguration:
        Rules:
          - Id: AnalysisCleanupRule
            Status: Enabled
            ExpirationInDays: 30
      LoggingConfiguration:
        DestinationBucketName: !Ref QueryResultsLogsBucket
        LogFilePrefix: String
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  QueryResultsLogsBucket:
    #checkov:skip=CKV_AWS_18:This is the query results logs bucket
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-${Environment}-query-results-logs
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  AuditAnalysisDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Description: TxMA - Event Message Analysis Database
        Name:  !Join [ '', [ !Join [ '', !Split [ '-', !Ref AWS::StackName ] ], !Sub '_${Environment}_analysis_database' ] ]

  AuditAnalysisTable:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref AuditAnalysisDatabase
      TableInput:
        Description: Table contains event message data to be analysed
        Name: !Join [ '', [ !Join [ '', !Split [ '-', !Ref AWS::StackName ] ], !Sub '_${Environment}_analysis_table' ] ]
        Parameters:
          has_encrypted_data: false
          projection.enabled: true
          projection.datetime.type: date
          projection.datetime.range: '2022/01/01/00,NOW'
          projection.datetime.format: 'yyyy/MM/dd/HH'
          projection.datetime.interval: 1
          projection.datetime.interval.unit: HOURS
          storage.location.template: !Join [ '', [ 's3://', !Ref AWS::StackName, '-', !Ref Environment, '-analysis-bucket/firehose/${datetime}/' ] ]
        PartitionKeys:
          - { Name: "datetime", Type: string }
        StorageDescriptor:
          Columns:
            - { Name: "event_id", Type: string }
            - { Name: "client_id", Type: string }
            - { Name: "timestamp", Type: bigint }
            - { Name: "timestamp_formatted", Type: string }
            - { Name: "event_name", Type: string }
            - { Name: "component_id", Type: string }
            - { Name: "user", Type: string }
            - { Name: "platform", Type: string }
            - { Name: "restricted", Type: string }
            - { Name: "extensions", Type: string }
          Compressed: true
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location: !Sub s3://${AWS::StackName}-${Environment}-analysis-bucket/firehose/
          OutputFormat: org.apache.hadoop.hive.ql.io.IgnoreKeyTextOutputFormat
          SerdeInfo:
            Parameters: { "ignore.malformed.json": true, "serialiazation.format": 1, "field.delim": "" }
            SerializationLibrary: org.openx.data.jsonserde.JsonSerDe
          StoredAsSubDirectories: false
        TableType: EXTERNAL_TABLE

  AthenaAnalysisWorkgroup:
    Type: AWS::Athena::WorkGroup
    Properties:
      Description: The workgroup for TxMA queries
      Name: !Sub ${AWS::StackName}-${Environment}-analysis-queries-workgroup
      RecursiveDeleteOption: true
      WorkGroupConfiguration:
        EnforceWorkGroupConfiguration: true
        PublishCloudWatchMetricsEnabled: false
        ResultConfiguration:
          EncryptionConfiguration:
            EncryptionOption: SSE_S3
          OutputLocation: !Join [ '', [ 's3://', !Ref QueryResultsBucket, '/' ] ]

  QueryRequestTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: zendeskId
          AttributeType: S
        - AttributeName: athenaQueryId
          AttributeType: S
      KeySchema:
        - AttributeName: zendeskId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: athenaQueryIdIndex
          KeySchema:
            - AttributeName: athenaQueryId
              KeyType: HASH
          Projection:
            ProjectionType: KEYS_ONLY
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: '{{resolve:ssm:DatabaseKmsKeyArn}}'

  InitiateDataRequestQueueArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: InitiateDataRequestQueueArn
      Type: String
      Value: !GetAtt InitiateDataRequestQueue.Arn

  InitiateDataRequestQueueUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: InitiateDataRequestQueueUrl
      Type: String
      Value: !Ref InitiateDataRequestQueue

  InitiateDataRequestDeadLetterQueueArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: InitiateDataRequestDeadLetterQueueArn
      Type: String
      Value: !GetAtt InitiateDataRequestDeadLetterQueue.Arn

  TerminatedJobQueueArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name:  TerminatedJobQueueArn
      Type: String
      Value: !GetAtt TerminatedJobQueue.Arn

  TerminatedJobQueueUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: TerminatedJobQueueUrl
      Type: String
      Value: !Ref TerminatedJobQueue

  InitiateAthenaQueryQueueArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name:  InitiateAthenaQueryQueueArn
      Type: String
      Value: !GetAtt InitiateAthenaQueryQueue.Arn

  InitiateAthenaQueryQueueUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: InitiateAthenaQueryQueueUrl
      Type: String
      Value: !Ref InitiateAthenaQueryQueue

  InitiateAthenaQueryDeadLetterQueueArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: InitiateAthenaQueryDeadLetterQueueArn
      Type: String
      Value: !GetAtt InitiateAthenaQueryDeadLetterQueue.Arn

  BatchJobManifestBucketArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: BatchJobManifestBucketArn
      Type: String
      Value: !GetAtt BatchJobManifestBucket.Arn

  BatchJobManifestBucketNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: BatchJobManifestBucketName
      Type: String
      Value: !Ref BatchJobManifestBucket

  AuditAnalysisDatabaseArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: AuditAnalysisDatabaseArn
      Type: String
      Value: !Sub arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:database/${AuditAnalysisDatabase}

  AuditAnalysisDatabaseNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: AuditAnalysisDatabaseName
      Type: String
      Value: !Ref AuditAnalysisDatabase

  AuditAnalysisTableArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: AuditAnalysisTableArn
      Type: String
      Value: !Sub arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:table/${AuditAnalysisDatabase}/${AuditAnalysisTable}

  AuditAnalysisTableNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: AuditAnalysisTableName
      Type: String
      Value: !Ref AuditAnalysisTable

  AthenaAnalysisWorkgroupArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: AthenaAnalysisWorkgroupArn
      Type: String
      Value: !Sub arn:${AWS::Partition}:athena:${AWS::Region}:${AWS::AccountId}:workgroup/${AthenaAnalysisWorkgroup}

  AthenaAnalysisWorkgroupNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: AthenaAnalysisWorkgroupName
      Type: String
      Value: !Ref AthenaAnalysisWorkgroup

  QueryResultsBucketArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: QueryResultsBucketArn
      Type: String
      Value: !GetAtt QueryResultsBucket.Arn

  QueryRequestTableNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: QueryRequestTableName
      Type: String
      Value: !Ref QueryRequestTable

  QueryRequestTableArnParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: QueryRequestTableArn
      Type: String
      Value: !GetAtt QueryRequestTable.Arn
